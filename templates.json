[
  {
    "id": "cal-com-docker",
    "name": "Cal.com",
    "intro": "Cal.com is an open-source scheduling infrastructure for absolutely everyone.",
    "logo": "https://raw.githubusercontent.com/calcom/cal.com/main/apps/web/public/android-chrome-192x192.png",
    "experimental": false,
    "requirements": {
      "memory": 4096,
      "cpu": 2,
      "storage": 20
    },
    "app": {
      "type": "docker-compose",
      "env": {
        "NEXT_PUBLIC_WEBAPP_URL": "https://${APP_HOSTNAME}",
        "NEXT_PUBLIC_API_V2_URL": "https://${APP_HOSTNAME}/api/v2",
        "NEXT_PUBLIC_LICENSE_CONSENT": "agree",
        "CALCOM_TELEMETRY_DISABLED": 1,
        "NEXTAUTH_SECRET": "${GENERATED_HASH}",
        "CALENDSO_ENCRYPTION_KEY": "${GENERATED_HASH}",
        "POSTGRES_USER": "postgres",
        "POSTGRES_PASSWORD": "postgres",
        "POSTGRES_DB": "postgres",
        "DATABASE_HOST": "database:5432",
        "DATABASE_URL": "postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${DATABASE_HOST}/${POSTGRES_DB}",
        "DATABASE_DIRECT_URL": "${DATABASE_URL}",
        "PORT": 3000
      },
      "repositoryUrl": "https://github.com/dollardeploy/templates",
      "sourceBranch": "main",
      "sourcePath": "cal-com-docker",
      "dockerComposeFile": "docker-compose.yml"
    },
    "introVideoUrl": "https://www.youtube-nocookie.com/embed/60HJt8DOVNo",
    "deployTime": "~10 minutes",
    "description": "Cal.com is a scheduling infrastructure for everyone. It's an open source alternative to Calendly that allows you to schedule meetings efficiently and integrate with various calendar services.",
    "services": [
      "postgres",
      "docker"
    ]
  },
  {
    "id": "cal-com",
    "name": "Cal.com",
    "intro": "Cal.com is an open-source scheduling infrastructure for absolutely everyone.",
    "logo": "https://raw.githubusercontent.com/calcom/cal.com/main/apps/web/public/android-chrome-192x192.png",
    "experimental": true,
    "requirements": {
      "memory": 4096,
      "cpu": 2,
      "storage": 20
    },
    "app": {
      "type": "next",
      "env": {
        "NEXT_PUBLIC_WEBAPP_URL": "https://${APP_HOSTNAME}",
        "NEXT_PUBLIC_API_V2_URL": "https://${APP_HOSTNAME}/api/v2",
        "NEXTAUTH_URL": "https://${APP_HOSTNAME}",
        "NEXTAUTH_SECRET": "${GENERATED_HASH}",
        "DATABASE_URL": "postgresql://postgres:postgres@localhost:5432/postgres",
        "CALENDSO_ENCRYPTION_KEY": "${GENERATED_HASH}",
        "NEXT_PUBLIC_LICENSE_CONSENT": "agree",
        "CALCOM_TELEMETRY_DISABLED": true,
        "PRISMA_SCHEMA_PATH": "packages/prisma/schema.prisma",
        "NODE_OPTIONS": "--max-old-space-size=4096"
      },
      "repositoryUrl": "https://github.com/calcom/cal.com.git",
      "sourceBranch": "v4.8.19",
      "startScript": "start",
      "buildScript": "build",
      "buildIncludeFiles": "packages/prisma",
      "preStartCmd": "npx prisma migrate deploy --schema packages/prisma/schema.prisma && yarn db-deploy",
      "postStartCmd": "yarn db-seed"
    },
    "introVideoUrl": "https://www.youtube-nocookie.com/embed/60HJt8DOVNo",
    "deployTime": "~10 minutes",
    "description": "Cal.com is a scheduling infrastructure for everyone. It's an open source alternative to Calendly that allows you to schedule meetings efficiently and integrate with various calendar services.",
    "services": [
      "postgres"
    ]
  },
  {
    "id": "cal-com-old",
    "name": "Cal.com old",
    "intro": "Cal.com is an open-source scheduling infrastructure for absolutely everyone.",
    "logo": "https://raw.githubusercontent.com/calcom/cal.com/main/apps/web/public/android-chrome-192x192.png",
    "experimental": true,
    "requirements": {
      "memory": 2048,
      "cpu": 1,
      "storage": 10
    },
    "app": {
      "type": "next",
      "env": {
        "NEXT_PUBLIC_WEBAPP_URL": "https://${APP_HOSTNAME}",
        "NEXTAUTH_URL": "https://${APP_HOSTNAME}",
        "NEXTAUTH_SECRET": "${GENERATED_HASH}",
        "DATABASE_URL": "postgresql://postgres:postgres@$localhost:5432/postgres",
        "CALENDSO_ENCRYPTION_KEY": "${GENERATED_HASH}",
        "NEXT_PUBLIC_LICENSE_CONSENT": "agree"
      },
      "repositoryUrl": "https://github.com/calcom/cal.com.git",
      "sourcePath": "apps/web",
      "sourceBranch": "main",
      "startScript": "start",
      "buildScript": "build",
      "installCmd": "yarn install --frozen-lockfile",
      "preStartCmd": "npx prisma db push --skip-generate && yarn db-deploy",
      "postStartCmd": "yarn db-seed"
    },
    "introVideoUrl": "https://www.youtube-nocookie.com/embed/60HJt8DOVNo",
    "deployTime": "~10 minutes",
    "description": "Cal.com is a scheduling infrastructure for everyone. It's an open source alternative to Calendly that allows you to schedule meetings efficiently and integrate with various calendar services.",
    "services": [
      "postgres"
    ]
  },
  {
    "id": "chatwoot",
    "name": "Chatwoot",
    "intro": "Open source live chat software",
    "description": "Chatwoot is a customer support tool for instant messaging channels",
    "logo": "https://app.chatwoot.com/brand-assets/logo_thumbnail.svg",
    "deployTime": "~3 minutes",
    "requirements": {
      "memory": 2048,
      "cpu": 1,
      "storage": 10
    },
    "introVideoUrl": "https://www.youtube-nocookie.com/embed/E4xUHyAAktY",
    "services": [
      "docker"
    ],
    "app": {
      "repositoryUrl": "https://github.com/dollardeploy/templates/",
      "sourceBranch": "main",
      "sourcePath": "chatwoot",
      "type": "docker-compose",
      "dockerComposeFile": "docker-compose.yml",
      "preStartCmd": "bash ./fixdocker.sh",
      "files": [
        {
          "path": "fixdocker.sh",
          "content": "#!/bin/bash\nmkdir -p data\nmkdir -p data/tmp\nmkdir -p data/storage\nmkdir -p data/postgres\nmkdir -p data/redis\nchown -R app:app data\ndocker compose run --rm rails bundle exec rails db:chatwoot_prepare\n"
        }
      ],
      "env": {
        "ACTIVE_STORAGE_SERVICE": "local",
        "ENABLE_ACCOUNT_SIGNUP": "false",
        "ENABLE_PUSH_RELAY_SERVER": "true",
        "FORCE_SSL": "false",
        "FRONTEND_URL": "${APP_URL}",
        "LOG_LEVEL": "info",
        "LOG_SIZE": "500",
        "POSTGRES_HOST": "postgres",
        "POSTGRES_PASSWORD": "123",
        "POSTGRES_USERNAME": "postgres",
        "REDIS_URL": "redis://redis:6379",
        "REDIS_PASSWORD": "",
        "SECRET_KEY_BASE": "${GENERATED_HASH}",
        "PORT": "3000"
      }
    }
  },
  {
    "id": "chatwoot3",
    "name": "Chatwoot 3.16",
    "intro": "Open source live chat software",
    "description": "Chatwoot is a customer support tool for instant messaging channels",
    "logo": "https://app.chatwoot.com/brand-assets/logo_thumbnail.svg",
    "deployTime": "~3 minutes",
    "experimental": true,
    "requirements": {
      "memory": 2048,
      "cpu": 1,
      "storage": 10
    },
    "introVideoUrl": "https://www.youtube-nocookie.com/embed/E4xUHyAAktY",
    "services": [
      "docker"
    ],
    "app": {
      "repositoryUrl": "https://github.com/dollardeploy/templates/",
      "sourceBranch": "main",
      "sourcePath": "chatwoot3",
      "type": "docker-compose",
      "dockerComposeFile": "docker-compose.yml",
      "preStartCmd": "bash ./fixdocker.sh",
      "files": [
        {
          "path": "fixdocker.sh",
          "content": "#!/bin/bash\ndocker compose run --rm rails bundle exec rails db:chatwoot_prepare\n"
        }
      ],
      "env": {
        "ACTIVE_STORAGE_SERVICE": "local",
        "ENABLE_ACCOUNT_SIGNUP": "false",
        "ENABLE_PUSH_RELAY_SERVER": "true",
        "FORCE_SSL": "false",
        "FRONTEND_URL": "${APP_URL}",
        "LOG_LEVEL": "info",
        "LOG_SIZE": "500",
        "POSTGRES_HOST": "postgres",
        "POSTGRES_PASSWORD": "123",
        "POSTGRES_USERNAME": "postgres",
        "REDIS_URL": "redis://redis:6379",
        "SECRET_KEY_BASE": "ahkaec8eeveiyieL",
        "PORT": "3000"
      }
    }
  },
  {
    "id": "code-server",
    "name": "Code Server",
    "intro": "Run VS Code on any machine anywhere and access it in the browser.",
    "logo": "https://raw.githubusercontent.com/dollardeploy/templates/refs/heads/main/coder-server/icon.svg",
    "requirements": {
      "memory": 2048,
      "cpu": 2,
      "storage": 10
    },
    "app": {
      "type": "docker-compose",
      "repositoryUrl": "https://github.com/dollardeploy/templates",
      "sourcePath": "coder-server",
      "sourceBranch": "main",
      "env": {
        "PORT": 3000,
        "SERVER_URL": "${APP_URL}",
        "PASSWORD": "${GENERATED_PWD}"
      },
      "preStartCmd": "mkdir -p ../.local && mkdir -p ../.config"
    },
    "deployTime": "~3 minutes",
    "description": "This template launches code-server, which is VS Code running on a remote server, accessible through the browser. It allows you to code on any device with a consistent development environment.",
    "services": [
      "docker"
    ]
  },
  {
    "id": "directus",
    "name": "Directus",
    "intro": "The Modern & Powerful CMS and BaaS",
    "logo": "https://raw.githubusercontent.com/directus/directus/refs/heads/main/docs/public/favicon.svg",
    "deployTime": "~3 minutes",
    "description": "The flexible backend for all of your projects.\nTurn your data into a headless CMS, admin panels, or apps with a custom UI, instant APIs, auth & more. Built for devs, used by everyone.\n",
    "requirements": {
      "memory": 2048,
      "cpu": 2,
      "storage": 10
    },
    "services": [
      "docker"
    ],
    "app": {
      "type": "docker-compose",
      "repositoryUrl": "https://github.com/dollardeploy/templates",
      "sourcePath": "directus",
      "sourceBranch": "main",
      "env": {
        "SECRET": "${GENERATED_HASH}",
        "PUBLIC_URL": "${APP_URL}",
        "ADMIN_EMAIL": "admin@${APP_HOSTNAME}",
        "ADMIN_PASSWORD": "${GENERATED_PWD}",
        "PORT": "8055"
      },
      "preStartCmd": "bash ./fixdocker.sh",
      "files": [
        {
          "path": "fixdocker.sh",
          "content": "#!/bin/bash\nmkdir -p ./data/database\nmkdir -p ./data/extensions\nmkdir -p ./data/uploads\nsudo chown -R \"$USER_UID:$USER_GID\" ./data/extensions\nsudo chown -R \"$USER_UID:$USER_GID\" ./data/uploads\n"
        }
      ]
    }
  },
  {
    "id": "erpnext",
    "name": "Frappe - ERPNext",
    "intro": "ERPNext is a free and open-source integrated Enterprise resource planning",
    "logo": "https://avatars.githubusercontent.com/u/836974",
    "experimental": true,
    "deployTime": "~10 minutes",
    "introVideoUrl": "https://www.youtube-nocookie.com/embed/RjTipQpUvNQ",
    "description": "ERPNext is a full-featured business management solution that helps SMEs\nto record all their business transactions in a single system. With ERPNext, SMEs\ncan make informed, fact-based, timely decisions to remain ahead in the competition.\nIt serves as the backbone of a business adding strength, transparency, and control\nto your growing enterprise.\n",
    "requirements": {
      "memory": 4096,
      "cpu": 2,
      "storage": 20
    },
    "services": [
      "docker"
    ],
    "postLaunchNote": "Username is `Administrator` and password is in environment variable `ADMIN_PASSWORD`.",
    "app": {
      "type": "docker-compose",
      "repositoryUrl": "https://github.com/dollardeploy/templates/",
      "sourcePath": "erpnext",
      "dockerComposeFile": "docker-compose.yml",
      "env": {
        "ADMIN_PASSWORD": "${GENERATED_PWD}",
        "PORT": 8080
      }
    }
  },
  {
    "id": "ghost-cms",
    "name": "Ghost CMS",
    "intro": "Ghost is an independent platform for publishing online by web and email newsletter.",
    "logo": "https://raw.githubusercontent.com/dollardeploy/templates/refs/heads/main/ghost-cms/157884383-1b75feb1-45d8-4430-b636-3f7e06577347.png",
    "deployTime": "~3 minutes",
    "description": "Ghost is a powerful app for professional publishers to create, share, and \ngrow a business around their content. It comes with modern tools to build a \nwebsite, publish content, send newsletters & offer paid subscriptions to members.\n",
    "requirements": {
      "memory": 2048,
      "cpu": 2,
      "storage": 10
    },
    "services": [
      "docker"
    ],
    "app": {
      "type": "docker-compose",
      "repositoryUrl": "https://github.com/dollardeploy/templates",
      "sourcePath": "ghost-cms",
      "sourceBranch": "main",
      "env": {
        "SERVER_URL": "${APP_URL}",
        "MYSQL_PASSWORD": "${GENERATED_PWD}",
        "PORT": 3000,
        "MAIL_FROM": "example@example.com",
        "MAIL_HOST": "127.0.0.1",
        "MAIL_PORT": 485,
        "MAIL_USERNAME": "username",
        "MAIL_PASSWORD": "password",
        "MAIL_SECURE": false
      }
    }
  },
  {
    "id": "homarr",
    "name": "Homarr",
    "intro": "A simple, yet powerful dashboard for your server.",
    "logo": "https://homarr.dev/img/favicon.png",
    "deployTime": "~3 minutes",
    "description": "Simplify the management of your server with Homarr - a sleek, modern dashboard that puts all of your apps and services at your fingertips.\n",
    "requirements": {
      "memory": 1024,
      "cpu": 1,
      "storage": 10
    },
    "services": [
      "docker"
    ],
    "app": {
      "type": "docker-compose",
      "repositoryUrl": "https://github.com/dollardeploy/templates",
      "sourcePath": "homarr",
      "sourceBranch": "main",
      "env": {
        "NEXTAUTH_URL": "${APP_URL}",
        "PORT": "3010"
      }
    }
  },
  {
    "id": "local-ai-cpu",
    "name": "Local AI (CPU)",
    "intro": "Local AI is an open-source, self-hostable online OpenAI API compatible service with WebUI to chat, generate images and more.",
    "logo": "https://github.com/mudler/LocalAI/blob/master/docs/static/android-chrome-192x192.png?raw=true",
    "requirements": {
      "memory": 4096,
      "cpu": 2,
      "storage": 60
    },
    "app": {
      "type": "docker-compose",
      "repositoryUrl": "https://github.com/dollardeploy/templates/",
      "sourcePath": "local-ai-cpu",
      "sourceBranch": "main",
      "dockerComposeFile": "docker-compose.yml",
      "allowAccessFrom": "${USER_IPADDRESS}",
      "env": {
        "PORT": 8080
      }
    },
    "introVideoUrl": "https://www.youtube-nocookie.com/embed/Xh57mMlfuMk",
    "deployTime": "~20 minutes",
    "description": "Local AI is an open-source, self-hostable online OpenAI API compatible service with chatbot UI.",
    "services": [
      "docker"
    ]
  },
  {
    "id": "local-ai-nvidia-cuda-12",
    "name": "Local AI (NVidia CUDA 12)",
    "intro": "Local AI is an open-source, self-hostable online OpenAI API compatible service with WebUI to chat, generate images and more. Works best with DataCrunch provider and GPU instances.",
    "logo": "https://github.com/mudler/LocalAI/blob/master/docs/static/android-chrome-192x192.png?raw=true",
    "requirements": {
      "memory": 4096,
      "cpu": 2,
      "storage": 60
    },
    "app": {
      "type": "docker-compose",
      "repositoryUrl": "https://github.com/dollardeploy/templates/",
      "sourcePath": "local-ai-nvidia-cuda-12",
      "sourceBranch": "main",
      "dockerComposeFile": "docker-compose.yml",
      "allowAccessFrom": "${USER_IPADDRESS}",
      "env": {
        "PORT": 8080
      }
    },
    "introVideoUrl": "https://www.youtube-nocookie.com/embed/Xh57mMlfuMk",
    "deployTime": "~20 minutes",
    "description": "Local AI is an open-source, self-hostable online OpenAI API compatible service with chatbot UI. This template is compatible with server which have NVidia GPU with CUDA 12 configured. We tested it with DataCrunch provider in DollarDeploy, and it works well with GPU instances of type A6000 and better (1€/hr).",
    "services": [
      "docker"
    ]
  },
  {
    "id": "mailpit",
    "name": "Mailpit",
    "intro": "Mailpit is a simple SMTP server that allows you to capture emails sent from your application.",
    "logo": "https://mailpit.axllent.org/images/mailpit.svg",
    "requirements": {
      "memory": 1024,
      "cpu": 1,
      "storage": 10
    },
    "app": {
      "type": "docker-compose",
      "repositoryUrl": "https://github.com/dollardeploy/templates",
      "sourcePath": "mailpit",
      "sourceBranch": "main",
      "dockerComposeFile": "docker-compose.yml",
      "preStartCmd": "bash ./fixdocker.sh",
      "env": {
        "PORT": "8025",
        "MP_MAX_MESSAGES": 5000,
        "MP_DATABASE": "/data/mailpit.db",
        "MP_SMTP_AUTH_ACCEPT_ANY": 0,
        "MP_SMTP_AUTH_ALLOW_INSECURE": 1,
        "MP_MAX_AGE": "30d",
        "MP_UI_AUTH": "admin:${GENERATED_PWD}",
        "MP_SMTP_AUTH": "admin:${GENERATED_PWD}",
        "MP_SMTP_RELAY_ALL": 0,
        "MP_SMTP_RELAY_HOST": "",
        "MP_SMTP_RELAY_PORT": 25,
        "MP_SMTP_RELAY_STARTTLS": 1,
        "MP_SMTP_RELAY_ALLOW_INSECURE": 1,
        "MP_SMTP_RELAY_AUTH": "none",
        "MP_SMTP_RELAY_USERNAME": "",
        "MP_SMTP_RELAY_PASSWORD": "",
        "MP_SMTP_RELAY_SECRET": "",
        "MP_SMTP_RELAY_RETURN_PATH": "",
        "MP_SMTP_RELAY_OVERRIDE_FROM": "",
        "MP_SMTP_RELAY_ALLOWED_RECIPIENTS": "",
        "MP_SMTP_RELAY_BLOCKED_RECIPIENTS": ""
      },
      "files": [
        {
          "path": "fixdocker.sh",
          "content": "mkdir -p data"
        }
      ]
    },
    "deployTime": "~5 minutes",
    "postLaunchNote": "Username is `admin` and password is in environment variable `GENERATED_PWD`.",
    "description": "[Mailpit](https://mailpit.axllent.org/) - email & SMTP testing tool with API for developers. \nMailpit is a small, fast, low memory, zero-dependency, multi-platform email\ntesting tool & API for developers.\nIt acts as an SMTP server, provides a modern web interface to view & test\ncaptured emails, and contains an API for automated integration testing\n",
    "services": [
      "docker"
    ]
  },
  {
    "id": "mattermost",
    "name": "Mattermost",
    "intro": "Mattermost is an open-source, self-hostable online chat service with file sharing, search, and integrations.",
    "logo": "https://avatars.githubusercontent.com/u/9828093",
    "requirements": {
      "memory": 4096,
      "cpu": 2,
      "storage": 20
    },
    "app": {
      "type": "docker-compose",
      "repositoryUrl": "https://github.com/mattermost/docker",
      "sourceBranch": "main",
      "dockerComposeFile": "docker-compose.yml",
      "preStartCmd": "bash ./fixdocker.sh",
      "env": {
        "MM_SERVICESETTINGS_SITEURL": "${APP_URL}",
        "TZ": "UTC",
        "RESTART_POLICY": "unless-stopped",
        "POSTGRES_IMAGE_TAG": "13-alpine",
        "POSTGRES_DATA_PATH": "./volumes/db/data",
        "POSTGRES_USER": "postgres",
        "POSTGRES_PASSWORD": "postgres",
        "POSTGRES_DB": "public",
        "CALLS_PORT": "8443",
        "MATTERMOST_CONFIG_PATH": "./volumes/app/mattermost/config",
        "MATTERMOST_DATA_PATH": "./volumes/app/mattermost/data",
        "MATTERMOST_LOGS_PATH": "./volumes/app/mattermost/logs",
        "MATTERMOST_PLUGINS_PATH": "./volumes/app/mattermost/plugins",
        "MATTERMOST_CLIENT_PLUGINS_PATH": "./volumes/app/mattermost/client/plugins",
        "MATTERMOST_BLEVE_INDEXES_PATH": "./volumes/app/mattermost/bleve-indexes",
        "MM_BLEVESETTINGS_INDEXDIR": "/mattermost/bleve-indexes",
        "MATTERMOST_IMAGE": "mattermost-team-edition",
        "MATTERMOST_IMAGE_TAG": "9.11.2",
        "MATTERMOST_CONTAINER_READONLY": "false",
        "MM_SERVICESETTINGS_ALLOWED_ORIGINS": "${APP_URL}",
        "PORT": "3005",
        "MM_SQLSETTINGS_DRIVERNAME": "postgres",
        "MM_SQLSETTINGS_DATASOURCE": "postgres://postgres:postgres@postgres:5432/public?sslmode=disable",
        "MM_FILESETTINGS_DRIVERNAME": "local"
      },
      "files": [
        {
          "path": "fixdocker.sh",
          "content": "#!/bin/bash\nsed -e \"s/mattermost:/mattermost:\\n    ports:\\n      - '127.0.0.1:3005:8065'/g\" -i docker-compose.yml\nmkdir -p ./volumes/app/mattermost/{config,data,logs,plugins,client/plugins,bleve-indexes}\nmkdir -p ./volumes/db/data\n# 70 is the standard uid/gid for \"postgres\" in Alpine\n# https://github.com/docker-library/postgres/blob/master/13/alpine3.20/Dockerfile\nsudo chown -R 70:70 ./volumes/db\n# Download config which enables uploads and focalboard plugin\ncurl -o ./volumes/app/mattermost/config/config.json https://gist.githubusercontent.com/huksley/5721e15687fc63e2a197749c4752d80f/raw/1506bb567305ca4fa33db231fb6ab20a091a75f6/mattermost-config.json\nsudo chown -R 2000:2000 ./volumes/app/mattermost\n"
        }
      ]
    },
    "introVideoUrl": "https://www.youtube-nocookie.com/embed/szfZfQFUSnU",
    "deployTime": "~5 minutes",
    "description": "Mattermost is a flexible, open source messaging platform that enables secure\nteam collaboration. It's a self-hosted alternative to proprietary SaaS\nmessaging and brings all your team communication into one place, making it\nsearchable and accessible anywhere.\n\nThis installation enables uploads and Focalboard plugin.\n",
    "services": [
      "postgres",
      "docker"
    ]
  },
  {
    "id": "maybe-finance",
    "name": "Maybe Finance",
    "intro": "The personal finance app for everyone",
    "description": "Maybe is an all-in-one personal finance platform. Track, optimize, grow, and manage your money through every stage of life.",
    "logo": "https://raw.githubusercontent.com/maybe-finance/maybe/refs/heads/main/app/assets/images/logomark-color.svg",
    "deployTime": "~3 minutes",
    "experimental": false,
    "requirements": {
      "memory": 2048,
      "cpu": 1,
      "storage": 10
    },
    "introVideoUrl": "https://www.youtube-nocookie.com/embed/EPq54TWKeJQ",
    "services": [
      "docker"
    ],
    "app": {
      "repositoryUrl": "https://github.com/dollardeploy/templates/",
      "sourceBranch": "main",
      "sourcePath": "maybe-finance",
      "type": "docker-compose",
      "dockerComposeFile": "docker-compose.yml",
      "env": {
        "FRONTEND_URL": "${APP_URL}",
        "SECRET_KEY_BASE": "${GENERATED_HASH}",
        "PORT": "3000"
      }
    }
  },
  {
    "id": "mcp-facebook-ads",
    "name": "Facebook Ads MCP Server",
    "intro": "MCP Proxy with Facebook Ads MCP Server for SSE transport",
    "logo": "https://avatars.githubusercontent.com/u/156911525",
    "deployTime": "~5 minutes",
    "description": "This MCP server provides tools for interacting with Facebook Ads objects and data.\n",
    "requirements": {
      "memory": 1024,
      "cpu": 1,
      "storage": 10
    },
    "services": [
      "docker"
    ],
    "postLaunchNote": "The MCP server will be available at the provided URL with /sse endpoint. Make sure to configure FB_TOKEN for proper Facebook Ads API connectivity.",
    "app": {
      "type": "docker-compose",
      "repositoryUrl": "https://github.com/dollardeploy/templates/",
      "sourcePath": "mcp-facebook-ads",
      "dockerComposeFile": "docker-compose.yml",
      "allowAccessFrom": "${USER_IPADDRESS}",
      "env": {
        "PORT": 8096,
        "FB_TOKEN": "dummy_facebook_access_token"
      }
    }
  },
  {
    "id": "mcp-frappe",
    "name": "Frappe CRM MCP Server",
    "intro": "MCP Proxy with Frappe MCP Server for SSE transport",
    "logo": "https://avatars.githubusercontent.com/u/836974",
    "deployTime": "~2 minutes",
    "description": "MCP Proxy with Frappe MCP Server provides a secure and efficient way to run Frappe MCP server\nover SSE transport. It allows LLM clients like Claude Desktop to connect to Frappe\nservers through a standardized interface.\n\nThe setup combines MCP Proxy for transport conversion and Frappe MCP Server for\nhandling MCP protocol communications, all in a single container solution.\n",
    "requirements": {
      "memory": 1024,
      "cpu": 1,
      "storage": 10
    },
    "services": [
      "docker"
    ],
    "postLaunchNote": "The MCP server will be available at the provided URL with /sse endpoint. Make sure to configure FRAPPE_URL, FRAPPE_API_KEY, and FRAPPE_API_SECRET for proper Frappe server connectivity.",
    "app": {
      "type": "docker-compose",
      "repositoryUrl": "https://github.com/dollardeploy/templates/",
      "sourcePath": "mcp-frappe",
      "dockerComposeFile": "docker-compose.yml",
      "allowAccessFrom": "${USER_IPADDRESS}",
      "env": {
        "PORT": 8096,
        "FRAPPE_URL": "http://localhost:8000",
        "FRAPPE_API_KEY": "frappe",
        "FRAPPE_API_SECRET": 123
      }
    }
  },
  {
    "id": "metabase",
    "name": "Metabase",
    "intro": "The simplest, fastest way to get business intelligence  and analytics to everyone in your company 😋",
    "logo": "https://avatars.githubusercontent.com/u/10520629",
    "requirements": {
      "memory": 4096,
      "cpu": 2,
      "storage": 20
    },
    "app": {
      "type": "docker-compose",
      "repositoryUrl": "https://github.com/dollardeploy/templates",
      "sourcePath": "metabase",
      "sourceBranch": "main",
      "dockerComposeFile": "docker-compose.yml",
      "env": {
        "PORT": "3000"
      }
    },
    "introVideoUrl": "https://www.youtube-nocookie.com/embed/dnT2Xj52mnk",
    "deployTime": "~5 minutes",
    "description": "Fast analytics with the friendly UX and integrated\ntooling to let your company explore data on their own.\nGet your data in front of your team. Connect to your\ndata stack in 5 minutes to make queries, visualizations, and dashboards\neasy for everyone—no SQL required.\n",
    "services": [
      "docker"
    ]
  },
  {
    "id": "miniflux",
    "name": "Miniflux",
    "intro": "Minimalist feed reader",
    "logo": "https://avatars.githubusercontent.com/u/10584991",
    "deployTime": "~3 minutes",
    "description": "Provides UI to read RSS feeds. Minimalistic and easy to use, runs natively on your server.\n",
    "requirements": {
      "memory": 1024,
      "cpu": 1,
      "storage": 10
    },
    "services": [
      "postgres"
    ],
    "app": {
      "type": "native",
      "repositoryUrl": "https://github.com/miniflux/v2/",
      "sourceBranch": "main",
      "startCmd": "./miniflux-linux-amd64",
      "buildCmd": "make linux-amd64",
      "env": {
        "ADMIN_USERNAME": "admin",
        "ADMIN_PASSWORD": "${GENERATED_PWD}",
        "CREATE_ADMIN": 1,
        "DATABASE_URL": "postgresql://postgres:postgres@localhost:5432/postgres",
        "LOG_LEVEL": "info",
        "RUN_MIGRATIONS": 1,
        "BASE_URL": "${APP_URL}",
        "PORT": "8080",
        "LISTEN_ADDR": "127.0.0.1:${PORT}"
      }
    },
    "postLaunchNote": "Username is `admin` and password is in environment variable `ADMIN_PASSWORD`.\n"
  },
  {
    "id": "n8n",
    "name": "N8N",
    "intro": "Free and source-available fair-code licensed workflow automation tool.",
    "logo": "https://avatars.githubusercontent.com/u/45487711",
    "deployTime": "~5 minutes",
    "description": "n8n helps you connect any app with an API to any other, and manipulate its data with little or no code.\nIt's an easy-to-use, user-friendly and highly customizable service, which uses a visual workflow editor\ninstead of writing code.\n",
    "requirements": {
      "memory": 2048,
      "cpu": 1,
      "storage": 10
    },
    "services": [
      "docker"
    ],
    "app": {
      "type": "docker-compose",
      "repositoryUrl": "https://github.com/dollardeploy/templates",
      "sourcePath": "n8n",
      "sourceBranch": "main",
      "dockerComposeFile": "docker-compose.yml",
      "env": {
        "PORT": 5678,
        "N8N_HOST": "${APP_HOSTNAME}",
        "N8N_PORT": "${PORT}",
        "N8N_PROTOCOL": "https",
        "WEBHOOK_URL": "${APP_URL}",
        "GENERIC_TIMEZONE": "UTC",
        "DB_TYPE": "postgresdb",
        "DB_POSTGRESDB_HOST": "postgres",
        "DB_POSTGRESDB_PORT": 5432,
        "POSTGRES_DB": "n8n",
        "POSTGRES_USER": "postgres",
        "POSTGRES_PASSWORD": "postgres",
        "DB_POSTGRESDB_DATABASE": "n8n",
        "DB_POSTGRESDB_USER": "n8n",
        "DB_POSTGRESDB_PASSWORD": "n8n",
        "POSTGRES_NON_ROOT_USER": "n8n",
        "POSTGRES_NON_ROOT_PASSWORD": "n8n",
        "N8N_ENCRYPTION_KEY": "${GENERATED_HASH}",
        "EXECUTIONS_MODE": "queue",
        "QUEUE_BULL_REDIS_HOST": "redis",
        "QUEUE_HEALTH_CHECK_ACTIVE": true
      },
      "preStartCmd": "bash ./fixdocker.sh",
      "files": [
        {
          "path": "fixdocker.sh",
          "content": "#!/bin/bash\nmkdir -p data/n8n\nmkdir -p data/n8n/.config\nchmod 0700 data/n8n/.config\n"
        }
      ]
    }
  },
  {
    "id": "openvpn",
    "name": "OpenVPN",
    "intro": "OpenVPN is a secure VPN channel to protect traffic",
    "logo": "https://avatars.githubusercontent.com/u/1569141",
    "deployTime": "~5 minutes",
    "introVideoUrl": "https://www.youtube-nocookie.com/embed/4ykbyOEsKQE",
    "description": "OpenVPN is an open-source virtual private network (VPN) solution that \ncreates secure point-to-point or site-to-site connections through\nencrypted tunnels over the internet.\n\nIt masks your IP address and encrypts your internet traffic, helping you \nmaintain anonymity online and preventing ISPs from monitoring your activities.\n",
    "requirements": {
      "memory": 1024,
      "cpu": 1,
      "storage": 10
    },
    "services": [
      "docker"
    ],
    "postLaunchNote": "Username is `admin` and password is in environment variable `ADMIN_PASSWORD`. Make sure you open 1194 port on your server.",
    "app": {
      "type": "docker-compose",
      "repositoryUrl": "https://github.com/dollardeploy/templates/",
      "sourcePath": "openvpn",
      "dockerComposeFile": "docker-compose.yml",
      "preStartCmd": "touch ./fw-rules.sh && touch ./checkpsw.sh",
      "env": {
        "ADMIN_PASSWORD": "${GENERATED_PWD}",
        "PORT": 8080,
        "TCP_PORT": 1194,
        "UDP_PORT": 1194
      }
    }
  },
  {
    "id": "plausible",
    "name": "Plausible CE",
    "logo": "https://raw.githubusercontent.com/plausible/community-edition/refs/heads/v2.1.1/images/logo_light.svg",
    "intro": "Simple, lightweight web analytics. No cookies and GDPR compliant.",
    "deployTime": "~1 minute",
    "description": "This template launches Plausible. It is a simple, lightweight web analytics. No cookies and GDPR compliant.",
    "services": [
      "docker"
    ],
    "requirements": {
      "memory": 2048,
      "cpu": 1,
      "storage": 10
    },
    "app": {
      "repositoryUrl": "https://github.com/plausible/community-edition",
      "sourceBranch": "v2.1.4",
      "type": "docker-compose",
      "dockerComposeFile": "compose.yml",
      "preStartCmd": "bash ./fixdocker.sh",
      "env": {
        "BASE_URL": "${APP_URL}",
        "SECRET_KEY_BASE": "TmfMIAclFEmyljW7cGLVt8vnvotnwmwp${GENERATED_HASH}",
        "HTTP_PORT": "3000",
        "PORT": "3001"
      },
      "files": [
        {
          "path": "fixdocker.sh",
          "content": "#!/bin/bash\nsed -e \"s/plausible:/plausible:\\n    ports:\\n      - '127.0.0.1:3001:3000'/g\" -i compose.yml\n"
        }
      ]
    }
  },
  {
    "id": "twenty-crm",
    "name": "Twenty CRM",
    "intro": "The #1 Open-Source CRM",
    "logo": "https://github.com/twentyhq/twenty/raw/main/packages/twenty-website/public/images/core/logo.svg",
    "deployTime": "~3 minutes",
    "description": "The #1 Open-Source CRM Modern, powerful, affordable platform to manage your customer relationships. Version 0.50.1. https://twenty.com/releases\n",
    "requirements": {
      "memory": 2048,
      "cpu": 2,
      "storage": 10
    },
    "services": [
      "docker"
    ],
    "app": {
      "type": "docker-compose",
      "repositoryUrl": "https://github.com/dollardeploy/templates",
      "sourcePath": "twenty-crm",
      "sourceBranch": "main",
      "env": {
        "APP_SECRET": "${GENERATED_HASH}",
        "SERVER_URL": "${APP_URL}",
        "PGPASSWORD_SUPERUSER": "${GENERATED_PWD}",
        "TAG": "v0.52.9",
        "STORAGE_TYPE": "local",
        "PORT": 3000,
        "PG_DATABASE_HOST": "db",
        "SIGN_IN_PREFILLED": true
      },
      "preStartCmd": "bash ./fixdocker.sh",
      "files": [
        {
          "path": "fixdocker.sh",
          "content": "#!/bin/bash\nmkdir -p data\nmkdir -p data/tmp\nmkdir -p data/local\nmkdir -p data/db/pgroot/data\n# TwentyCRM expects to run as 1000:1000\nsudo chown 1000:1000 data/local\nsudo chown 1000:1000 data/tmp\n# The server must be started by the user that owns the data directory.\nsudo chown root:root data/db\n# UID/GID which runs postgres in db container\nsudo chown 101:103 -R data/db/pgroot\n# data directory \"/home/postgres/pgdata/pgroot/data\" has invalid permissions \n# Permissions should be u=rwx (0700) or u=rwx,g=rx (0750)\nsudo chmod 0700 data/db/pgroot/data\n"
        }
      ]
    }
  },
  {
    "id": "uptime-kuma",
    "name": "Uptime Kuma",
    "intro": "Uptime Kuma is a simple, easy-to-use uptime monitoring tool.",
    "logo": "https://raw.githubusercontent.com/louislam/uptime-kuma/master/public/icon.svg",
    "requirements": {
      "memory": 1024,
      "cpu": 1,
      "storage": 10
    },
    "app": {
      "type": "docker-compose",
      "repositoryUrl": "https://github.com/dollardeploy/uptime-kuma",
      "sourceBranch": "main",
      "dockerComposeFile": "compose.yaml",
      "env": {
        "PORT": "3001"
      }
    },
    "introVideoUrl": "https://www.youtube-nocookie.com/embed/r_A5NKkAqZM?start=403",
    "deployTime": "~5 minutes",
    "description": "Uptime Kuma is a simple, easy-to-use uptime monitoring tool.\nIt's a great way to monitor your website or server uptime.  \nIt's also a great way to monitor your server resources.\n",
    "services": [
      "docker"
    ]
  },
  {
    "id": "wikijs",
    "name": "Wiki.js",
    "intro": "Wiki.js is a modern, feature-rich, and easy-to-use wiki app built on Node.js.",
    "logo": "https://js.wiki/img/wikijs-full-2021.b840e376.svg",
    "requirements": {
      "memory": 2048,
      "cpu": 2,
      "storage": 10
    },
    "app": {
      "type": "react",
      "repositoryUrl": "https://github.com/requarks/wiki",
      "sourceBranch": "main",
      "buildScript": "build",
      "startScript": "start",
      "preStartCmd": "node -e \"const fs = require('fs'); const package = require('./package.json'); package.dev = false; fs.writeFileSync('./package.json', JSON.stringify(package, null, 2));\"",
      "env": {
        "PORT": 3000,
        "PGSSLMODE": "no-verify",
        "DATABASE_URL": "${POSTGRES_URL}"
      },
      "files": [
        {
          "path": "config.yml",
          "content": "port: 3000\nbindIP: 127.0.0.1\ndatabase:\n  type: postgres\n  host: localhost\n  port: 5432\n  user: postgres\n  password: postgres\n  database: postgres\n  ssl: true\n  schema: public\n  sslOptions:\n    auto: false\n    rejectUnauthorized: false\ndataPath: ./tmp\n"
        }
      ]
    },
    "introVideoUrl": "https://www.youtube-nocookie.com/embed/xjOfL_mMWk4",
    "deployTime": "~5 minutes",
    "description": "A modern, lightweight and powerful wiki app built on NodeJS\n",
    "services": [
      "postgres"
    ]
  },
  {
    "id": "wordpress",
    "name": "WordPress",
    "intro": "The World's Most Popular CMS",
    "logo": "https://avatars.githubusercontent.com/u/276006",
    "deployTime": "~3 minutes",
    "description": "WordPress is open source software you can use to create a beautiful website, blog, or app.\n",
    "requirements": {
      "memory": 1024,
      "cpu": 1,
      "storage": 10
    },
    "services": [
      "docker"
    ],
    "app": {
      "type": "docker-compose",
      "repositoryUrl": "https://github.com/dollardeploy/templates",
      "sourcePath": "wordpress",
      "sourceBranch": "main",
      "env": {
        "MYSQL_ROOT_PASSWORD": "${GENERATED_PWD}",
        "PUBLIC_URL": "${APP_URL}",
        "PORT": "8080"
      },
      "preStartCmd": "bash ./fixdocker.sh",
      "files": [
        {
          "path": "fixdocker.sh",
          "content": "#!/bin/bash\nmkdir -p ./data/db\nmkdir -p ./wordpress\nsudo chown -R 999:999 ./data/db\n"
        }
      ]
    }
  }
]